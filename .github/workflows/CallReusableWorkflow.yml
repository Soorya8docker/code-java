name: Dynamic Dependencies Example

on:
  workflow_dispatch:
    inputs:
      Branch:
        description: 'Enter Sprint branch'
        type: string
        required: true
        default: master
env:
  SKIP_JOB2: false # Environment variable to simulate dynamic behavior

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      proceed_to_job2: ${{ steps.set-output.outputs.proceed }}
    steps:
      - name: Decide whether to proceed to Job2
        id: set-output
        run: |
          echo "##[set-output name=proceed;]true"; RC=$? # Change to 'false' to simulate skipping
          echo $RC
          if [ "${RC}" -eq 0 ]; then echo -e "INFO: Re-compile maketpf" fi

      - name: Job 1 Execution
        run: echo "Job 1 completed."

  job2:
    runs-on: ubuntu-latest
    needs: job1
    if: ${{ needs.job1.outputs.proceed_to_job2 == 'true' }}
    steps:
      - name: Job 2 Execution
        run: echo "Job 2 is running because Job 1 allowed it."
